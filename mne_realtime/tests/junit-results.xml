<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skipped="0" tests="2" time="5.936"><testcase classname="mne.realtime.tests.test_lsl_client" file="mne/realtime/tests/test_lsl_client.py" line="25" name="test_lsl_client" time="4.271"><system-out>now sending data...
Client: Waiting for server to start
Client: Connected
1 matching events found
No baseline correction applied
Not setting metadata
0 projection items activated
0 bad epochs dropped
Stopping stream...
</system-out></testcase><testcase classname="mne.realtime.tests.test_lsl_client" file="mne/realtime/tests/test_lsl_client.py" line="49" name="test_lsl_rt_epochs" time="1.522"><failure message="ValueError: not enough values to unpack (expected 2, got 0)">def test_lsl_rt_epochs():
        &quot;&quot;&quot;Test the functionality of the LSL Client with RtEpochs.&quot;&quot;&quot;
        stream = MockLSLStream(host, n_channels=n_channels, ch_type=&quot;eeg&quot;,
                               sfreq=sfreq, testing=True)
        stream.start()
    
        try:
            data_rt = None
            events_ids_rt = None
            with LSLClient(info=info, host=host) as client:
                epochs_rt = RtEpochs(client, event_id, tmin, tmax, stim_channel)
                epochs_rt.start()
                time.sleep(15)
    
                for ev_num, ev in enumerate(epochs_rt.iter_evoked()):
                    if ev_num == 0:
                        data = ev.data[None, :, :]
                        events_ids = int(
                            ev.comment)  # comment attribute contains event_id
                    else:
                        data = np.concatenate(
                            (data, ev.data[None, :, :]), axis=0)
                        events_ids = np.append(events_ids,
                                               int(ev.comment))
    
                epochs_rt.stop(stop_receive_thread=True)
    
            data = epochs_rt.get_data()
    
            n_samples_prestim = np.abs(tmin * sfreq)
            n_sample_poststim = tmax * sfreq
    
&gt;           data_channels, data_samples = data.shape[1:]
E           ValueError: not enough values to unpack (expected 2, got 0)

client     = &lt;mne.realtime.lsl_client.LSLClient object at 0x808c01898&gt;
data       = array([], dtype=float64)
data_rt    = None
epochs_rt  = &lt;RtEpochs  |  good / bad epochs received: 0 / 0, epochs in queue: 0, , tmin : -0.1 (s), tmax : 0.5 (s), baseline : (None, 0)&gt;
events_ids_rt = None
n_sample_poststim = 50.0
n_samples_prestim = 10.0
stream     = &lt;mne.realtime.mock_lsl_stream.MockLSLStream object at 0x8099a81d0&gt;

test_lsl_client.py:82: ValueError</failure><system-out>now sending data...
Client: Waiting for server to start
Client: Connected
Applying baseline correction (mode: mean)
Not setting metadata
0 projection items activated
Stopping stream...
</system-out></testcase></testsuite>