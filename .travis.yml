language: c
dist: xenial
sudo: false
cache:
  apt: true
  pip: true
env:
    # TRAVIS_PYTHON_VERSION is only needed for neo's setup.py
    # OPENBLAS_NUM_THREADS=1 avoid slowdowns:
    # https://github.com/xianyi/OpenBLAS/issues/731
    global: PYTHON_VERSION=3.6 DISPLAY=:99.0 MNE_LOGGING_LEVEL=warning
            PIP_DEPENDENCIES="codecov nitime"
            TRAVIS_PYTHON_VERSION=3.6 CONDA_VERSION=">=4.3.27"
            OPENBLAS_NUM_THREADS=1

matrix:
    include:
        # No data + style testing
        - os: linux
          env: DEPS=nodata MNE_DONTWRITE_HOME=true MNE_FORCE_SERIAL=true MNE_SKIP_NETWORK_TEST=1
               CONDA_DEPENDENCIES="numpy scipy matplotlib sphinx pytest pytest-timeout pytest-cov pytest-mock"
               PIP_DEPENDENCIES="flake8 numpydoc codespell pydocstyle codecov check-manifest pytest-sugar pytest-faulthandler"

        # Linux
        - os: linux
          env: CONDA_ENVIRONMENT="environment.yml"

        # OSX conda
        - os: osx
          env: CONDA_ENVIRONMENT="environment.yml"

        # PIP + non-default stim channel
        - os: linux
          env: MNE_STIM_CHANNEL=STI101
               PYTHON_VERSION=3.7
          language: python
          python: "3.7"
          addons:
            apt:
              packages:
                - qt5-default  # Qt 5.12 release needs this to avoid a missing library bug

# Setup anaconda
before_install:
    - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset;
      fi;
    - if [ -z "$CONDA_ENVIRONMENT" ] && [ -z "$CONDA_DEPENDENCIES" ]; then
        pip uninstall -y numpy;
        pip install -f "https://7933911d6844c6c53a7d-47bd50c35cd79bd838daf386af554a83.ssl.cf2.rackcdn.com" --pre numpy scipy;
        pip install --upgrade $PIP_DEPENDENCIES;
        pip install --upgrade -r requirements.txt;
      else
        git clone https://github.com/astropy/ci-helpers.git;
        source ci-helpers/travis/setup_conda.sh;
        if [ ! -z "$CONDA_ENVIRONMENT" ]; then
          pip uninstall --yes mne;
        fi;
        if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
          pip install --upgrade pyqt5>=5.10 pylsl;
        else
          conda install -c tstenner pylsl;
        fi;
      fi
    # Don't source mne_setup_sh here because changing PATH etc. can't be done in a script
    - if [ "${DEPS}" == "" ]; then
        export MNE_ROOT="${PWD}/minimal_cmds";
        export PATH=${MNE_ROOT}/bin:$PATH;
        if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
          curl https://staff.washington.edu/larsoner/minimal_cmds.tar.gz | tar xz;
          export LD_LIBRARY_PATH=${MNE_ROOT}/lib:$LD_LIBRARY_PATH;
          export NEUROMAG2FT_ROOT="${PWD}/minimal_cmds/bin";
        else
          curl https://staff.washington.edu/larsoner/minimal_cmds_osx.tar.gz | tar xz;
          export DYLD_LIBRARY_PATH=${MNE_ROOT}/lib:$DYLD_LIBRARY_PATH;
        fi;
        mne_surf2bem --version;
      fi;

install:
    # Rvm overrides cd with a function so that it can hook into it to run
    # some scripts, see https://github.com/travis-ci/travis-ci/issues/8703
    - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
        unset -f cd;
      fi;
    - python setup.py build
    - python setup.py install
    - python -c "import mne; mne.sys_info()"
    # Trigger download of testing data
    - if [ "${DEPS}" != "nodata" ]; then
        python -c 'import mne; mne.datasets.testing.data_path(verbose=True)';
        ls -al $HOME/mne_data/;
        ls -al $HOME/mne_data/MNE-testing-data/;
        ls -al $HOME/mne_data/MNE-testing-data/MEG/;
        ls -al $HOME/mne_data/MNE-testing-data/MEG/sample/;
      else
        export MNE_SKIP_TESTING_DATASET_TESTS=true;
      fi;

script:
    - python -c "import mne; print(mne.sys_info())"
    - pytest mne_realtime
    - if [ "${DEPS}" == "nodata" ]; then
        make pep;
      fi;

after_script:
    - codecov
