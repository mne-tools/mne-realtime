version: 2
jobs:
    build_docs:
      docker:
        - image: circleci/python:3.8.5-buster
      steps:
        - restore_cache:
            keys:
              - source-cache-realtime
        - checkout
        - run:
            name: Complete checkout
            command: |
              if ! git remote -v | grep upstream; then
                git remote add upstream git://github.com/mne-tools/mne-realtime.git
              fi
              git fetch upstream
        - save_cache:
            key: source-cache-realtime
            paths:
              - ".git"
        - run:
            name: Set BASH_ENV
            command: |
              set -e
              echo "set -e" >> $BASH_ENV
              echo "export OPENBLAS_NUM_THREADS=4" >> $BASH_ENV
              echo "export XDG_RUNTIME_DIR=/tmp/runtime-circleci" >> $BASH_ENV
              wget -q -O tools/get_minimal_commands.sh https://raw.githubusercontent.com/larsoner/mne-python/cis/tools/get_minimal_commands.sh
              source tools/get_minimal_commands.sh
              echo "source ${PWD}/tools/get_minimal_commands.sh" >> $BASH_ENV
              echo "export PATH=~/.local/bin/:$PATH" >> $BASH_ENV
              echo "BASH_ENV:"
              cat $BASH_ENV
              mkdir -p ~/mne_data
        - run:
            name: check neuromag2ft
            command: |
              neuromag2ft --version

        - run:
            name: Merge with upstream
            command: |
              echo $(git log -1 --pretty=%B) | tee gitlog.txt
              echo ${CI_PULL_REQUEST//*pull\//} | tee merge.txt
              if [[ $(cat merge.txt) != "" ]]; then
                echo "Merging $(cat merge.txt)";
                git pull --ff-only upstream "refs/pull/$(cat merge.txt)/merge";
              fi

        - run:
            name: Install 3D rendering libraries \ PyQt5 dependencies \ graphviz \ optipng (for optimized images)
            command: |
              sudo apt-get install libosmesa6 libglx-mesa0 libopengl0 libglx0 libdbus-1-3 \
                  libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-shape0 libxcb-xfixes0 libxcb-xinerama0 \
                  graphviz \
                  optipng

        - restore_cache:
            keys:
              - pip-cache

        - run:
            name: Get Python running
            command: |
              pip install --user --upgrade --progress-bar off pip numpy
              pip install --user --upgrade --progress-bar off -r requirements.txt
              pip install --user --upgrade --progress-bar off "sphinxcontrib-bibtex==2.0.0" "https://api.github.com/repos/mne-tools/mne-python/zipball/main" "https://api.github.com/repos/rtfd/sphinx_rtd_theme/zipball/master" "https://api.github.com/repos/sphinx-gallery/sphinx-gallery/zipball/master" memory_profiler

        - save_cache:
            key: pip-cache
            paths:
              - ~/.cache/pip

        # Look at what we have and fail early if there is some library conflict
        - run:
            name: Check installation
            command: |
               which python
               python -c "import mne; mne.sys_info()"
               LIBGL_DEBUG=verbose python -c "import matplotlib.pyplot as plt; plt.figure()"
               python -c "import mne; mne.set_config('MNE_LOGGING_LEVEL', 'info')"
               python -c "import mne; level = mne.get_config('MNE_LOGGING_LEVEL'); assert level.lower() == 'info', repr(level)"

        # Load our data
        - restore_cache:
            keys:
              - data-cache

        - run:
            name: Get data
            command: |
              python setup.py develop --user
              mkdir -p ~/mne_data
              python -c "import mne; print(mne.datasets.sample.data_path(update_path=True))";

        # Build docs
        - run:
            name: make html
            command: |
              cd doc;
              make html;

        # Save the JUnit file
        - store_test_results:
            path: doc/_build/test-results
        - store_artifacts:
            path: doc/_build/test-results
            destination: test-results

        # Save the outputs
        - store_artifacts:
            path: doc/_build/html/
            destination: dev
        - persist_to_workspace:
            root: doc/_build
            paths:
              - html

        # Keep these separate, maybe better in terms of size limitations (?)
        - save_cache:
            key: data-cache
            paths:
              - ~/.mne
              - ~/mne_data/MNE-sample-data

    deploy:
      docker:
        - image: circleci/python:3.6-jessie
      steps:
        - attach_workspace:
            at: /tmp/build
        - restore_cache:
            keys:
              - website-cache
        - run:
            name: Fetch docs
            command: |
              set -e
              mkdir -p ~/.ssh
              echo -e "Host *\nStrictHostKeyChecking no" > ~/.ssh/config
              chmod og= ~/.ssh/config
              if [ ! -d ~/mne-tools.github.io ]; then
                git clone git@github.com:/mne-tools/mne-tools.github.io.git ~/mne-tools.github.io --depth=1
              fi
        - run:
            name: Deploy docs
            command: |
              set -e;
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                git config --global user.email "circle@mne.com";
                git config --global user.name "Circle CI";
                cd ~/mne-tools.github.io;
                git checkout master
                git remote -v
                git fetch origin
                git reset --hard origin/master
                git clean -xdf
                echo "Deploying dev docs for ${CIRCLE_BRANCH}.";
                rm -Rf mne-realtime;
                cp -a /tmp/build/html mne-realtime;
                git add -A;
                git commit -m "CircleCI update of mne-realtime docs (${CIRCLE_BUILD_NUM}).";
                git push origin master;
              else
                echo "No deployment (build: ${CIRCLE_BRANCH}).";
              fi
        - save_cache:
            key: website-cache
            paths:
              - ~/mne-tools.github.io

workflows:
  version: 2

  default:
    jobs:
      - build_docs
      - deploy:
          requires:
            - build_docs
          filters:
            branches:
              only:
                - master
